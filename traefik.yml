entryPoints:
  # Entry point for HTTP traffic on port 80
  web:
    address: ":80"
  # Entry point for HTTPS traffic on port 443
  websecure:
    address: ":443"
  traefik:
    address: ":8080"

# Configuration for obtaining SSL certificates via Let's Encrypt
certificatesResolvers:
  myresolver:
    acme:
      # Email address for Let's Encrypt notifications and account management
      email: cnma.staging@gmail.com
      # Storage file for SSL certificates
      storage: acme.json
      # Use HTTP challenge for domain verification
      httpChallenge:
        entryPoint: web

http:
  # Configure routers for handling requests
  routers:
    # Global HTTP to HTTPS redirection
    redirect-to-https:
      # Match all HTTP requests with any hostname
      rule: "HostRegexp(`{host:.+}`)" 
      entryPoints:
        - web 
      # Middleware to handle the redirection
      middlewares:
        - redirect-to-https 
      # No actual service, just a placeholder for redirection
      service: noop@internal

    # Router to redirect www to non-www
    redirect-www:
      rule: "Host(`www.projectchigozie.me`)"
      entryPoints:
        - web
        - websecure
      # Middleware to handle the redirection
      middlewares:
        - redirect-www
      # No actual service, just a placeholder for redirection
      service: noop@internal

    # # Main router for handling requests to 'projectchigozie.me'
    # web-secure:
    #   rule: "Host(`projectchigozie.me`)"
    #   entryPoints:
    #     - websecure
    #   # Forwards requests to the 'frontend' service
    #   service: frontend
    #   tls:
    #     certResolver: myresolver

    # # Router for exposing Prometheus metrics
    # prometheus:
    #   # Matches requests for the '/prometheus' path
    #   rule: "Path(`/prometheus`)"
    #   entryPoints:
    #     - websecure
    #   # Internal service for Prometheus metrics
    #   service: prometheus@internal

  middlewares:
    # Middleware to redirect HTTP to HTTPS
    redirect-to-https:
      redirectScheme:
        scheme: https
        # Sends a permanent redirect (HTTP 301)
        permanent: true

    # Middleware to redirect 'www' subdomain to the root domain
    redirect-www:
      redirectRegex:
        # Matches URLs starting with 'www.'
        regex: "^https?://www\\.(.*)"
        # Replaces 'www.' with the root domain
        replacement: "https://$1"
        # Sends a permanent redirect (HTTP 301)
        permanent: true

# Enable Prometheus metrics for monitoring
metrics:
  prometheus:
    # Add labels for entry point and service
    addEntryPointsLabels: true
    addServicesLabels: true

log:
  # Set the logging level to DEBUG
  level: DEBUG
  format: json

api:
  # Enable the dashboard api
  dashboard: true
  insecure: true

# Use Docker as the provider for Traefik configurations
providers:
  docker:
    # Only explicitly exposed containers will be served by Traefik
    exposedByDefault: false